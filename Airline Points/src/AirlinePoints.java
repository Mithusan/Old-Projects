/*
Programmer: Mithusan Arulampalam
Date: December 4th, 2019
Program Name: Airline Points
* Program Description: allows an airline to record airline points data for its 
* passengers and to determine if a passenger qualifies for bonus points
*/

//Imports
import java.util.*;
import java.util.regex.Pattern;

public class AirlinePoints extends javax.swing.JFrame {
    //Creates an ArrayList of objects
    //The objects are defined by the 'Employees' class
    ArrayList<airlinePoints> pointsData = new ArrayList<airlinePoints>();
    
    /**
     * Creates new form AirlinePoints
     */
    public AirlinePoints() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        firstName = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        week1 = new javax.swing.JTextField();
        week2 = new javax.swing.JTextField();
        week3 = new javax.swing.JTextField();
        week4 = new javax.swing.JTextField();
        Add = new javax.swing.JButton();
        List = new javax.swing.JButton();
        totalPoints = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Output = new javax.swing.JTextArea();
        ErrorOutput = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setText("Airline Points");

        jLabel2.setText("First Name");

        jLabel3.setText("Last Name");

        jLabel4.setText("Week 1");

        jLabel5.setText("Week 2");

        jLabel6.setText("Week 3");

        jLabel7.setText("Week 4");

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        List.setText("List");
        List.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListActionPerformed(evt);
            }
        });

        totalPoints.setText("Total Points");
        totalPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPointsActionPerformed(evt);
            }
        });

        Output.setColumns(20);
        Output.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        Output.setRows(5);
        jScrollPane1.setViewportView(Output);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(156, 156, 156))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(week2, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(week1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(week3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(week4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(195, 195, 195)
                                        .addComponent(totalPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                                        .addComponent(List, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(165, 165, 165)))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
                            .addComponent(ErrorOutput))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(week1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(week3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(week2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(week4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(List)
                    .addComponent(totalPoints)
                    .addComponent(Add))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ErrorOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Class Stores Each Passengers Point Info
    class airlinePoints{
        //Variables
        String fullName;
        int firstWeek, secondWeek, thirdWeek, fourthWeek, totalPoints, bonusPoints;
        
        //Sets up the new object with field names and values when called as a new object.
        airlinePoints(String _fullName, int _firstWeek, int _secondWeek, 
                int _thirdWeek, int _fourthWeek, int _totalPoints, int _bonusPoints){
            fullName = _fullName;//Passengers Name
            firstWeek = _firstWeek;//Points from first Week
            secondWeek = _secondWeek;//Points from second Week
            thirdWeek = _thirdWeek;//Points from third Week
            fourthWeek = _fourthWeek;//Points from fourth Week
            totalPoints = _totalPoints;//Total Points
            bonusPoints = _bonusPoints;//Bonus Points
        }
    }
    
    //ADD BUTTON
    public void addPassenger(){
        //TRY CATCH
        try{
            //VARIABLES
            //Defines the Variables
            airlinePoints a;
            String fullName;
            int firstWeek, secondWeek, thirdWeek, fourthWeek, totalPoints, bonusPoints;
            
            //Fills in Variables
            //Using User input
            String fName = firstName.getText();//Employee first Name
            String lName = lastName.getText();//Employee last Name
            fullName = fName + " " + lName;//Employee Name
            firstWeek = Integer.parseInt(week1.getText());//Points from first Week
            secondWeek = Integer.parseInt(week2.getText());//Points from second Week
            thirdWeek = Integer.parseInt(week3.getText());//Points from third Week
            fourthWeek = Integer.parseInt(week4.getText());//Points from fourth Week
            
            totalPoints = firstWeek + secondWeek + thirdWeek + fourthWeek;//Total Points of Passenger
            
            //Intiallizes bonusPoints
            bonusPoints = 0;
            
            //Checks if passenger is qualified for bonus points
            if (totalPoints > 5000){
                bonusPoints = 1000;
            }
            
            if (firstWeek >= 0 && secondWeek >= 0 && thirdWeek >= 0 && fourthWeek >= 0){   
                if (Pattern.matches("[a-zA-Z]+", fName + lName)){
                    a = new airlinePoints(fullName, firstWeek, secondWeek, thirdWeek, fourthWeek, totalPoints, bonusPoints);
                    pointsData.add(a);
                    
                    //Cleans Error Output of any previous errors
                    ErrorOutput.setText(" ");
                }//if (Pattern.matches("[a-zA-Z]+", fName + lName))
                else{
                    //Error Output
                    ErrorOutput.setText("Input only letters for First and Last Name");
                }//else
            }//if (firstWeek >= 0 && secondWeek >= 0 && thirdWeek >= 0 && fourthWeek >= 0)
            else{
                //Error Output
                ErrorOutput.setText("Points Must be Positive Integers");
            }//else
        }//End of Try
        catch (NumberFormatException e){//Catches if wrong format
            //Error Output
            ErrorOutput.setText("Please Input in Correct Format!");
        }//End of Catch
    }
    
    //LIST BUTTON
    public void listPassenger(){
        //Variable
        String temp="";
        
        //The get(x) portion of the code goes to the “x” index of the ArrayList,
        //then looks for the value in the field defined by the object class.
        for (int x=0; x<= pointsData.size()-1; x++) {
            temp = temp + pointsData.get(x).fullName + ", "
                    + pointsData.get(x).firstWeek + " " + pointsData.get(x).secondWeek +
                    " " + pointsData.get(x).thirdWeek + " " + pointsData.get(x).fourthWeek + "\n";
        }
        //Output
        Output.setText(temp);  
    }
    
    public void passengerPoints(){
        //Variable
        String temp="";
        
        //Saves name of the passenger user inputed
        String fName = firstName.getText();//Employee first Name
        String lName = lastName.getText();//Employee last Name
        String fullName = fName + " " + lName;//Employee Name
        
        //Used to find out if inputed passenger exists
        int error = 0;
        
        //FOR LOOP
        for (int x = 0; x < pointsData.size(); x++){
            //Checks if inputed id is in the records
            if (pointsData.get(x).fullName.contains(fullName)){
                System.out.println(pointsData.get(x).fullName);
                temp = pointsData.get(x).fullName + "'s Total Points are:\n" +
                        pointsData.get(x).totalPoints + "\nBonus:" + 
                        pointsData.get(x).bonusPoints;
                
                //Empties Error
                ErrorOutput.setText("");
                break;
            }//if (pointsData.get(x).fullName == fullName)
            else{//If inputed fullName is not in pointsData ArrayList
                error++;
            }//else
        }//for (int x = 0; x < employeeData.size(); x++)
        
        //If passenger does not Exist
        if (error == pointsData.size()){
            //Error Output
            ErrorOutput.setText("Error! No Passenger Under: " + fullName);
            System.out.println(fullName);
        }
        
        //Output
        Output.setText(temp); 
    }
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        //Calls Custom Function
        addPassenger();
        
    }//GEN-LAST:event_AddActionPerformed

    private void ListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListActionPerformed
        //Calls Custom Function
        listPassenger();
        
    }//GEN-LAST:event_ListActionPerformed

    private void totalPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPointsActionPerformed
        //Calls Custom Function
        passengerPoints();
        
    }//GEN-LAST:event_totalPointsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AirlinePoints.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AirlinePoints().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JTextField ErrorOutput;
    private javax.swing.JButton List;
    private javax.swing.JTextArea Output;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField firstName;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastName;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton totalPoints;
    private javax.swing.JTextField week1;
    private javax.swing.JTextField week2;
    private javax.swing.JTextField week3;
    private javax.swing.JTextField week4;
    // End of variables declaration//GEN-END:variables

}
